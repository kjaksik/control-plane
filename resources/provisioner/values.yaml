global:
  images:
    containerRegistry:
      path: eu.gcr.io/kyma-project/incubator
    provisioner:
      dir:
      version: "PR-1425"
    schema_migrator:
      dir:
      version: "PR-1425"
    tests:
      provisioner:
        dir:
        version: "8fb2e53b"

  isLocalEnv: false

  gateway:
    tls:
      host: compass-gateway
      secure:
        oauth:
          host: compass-gateway-auth-oauth
    mtls:
      host: compass-gateway-mtls

  oauth2:
    host: oauth2

  livenessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 1
    periodSeconds: 10
  readinessProbe:
    initialDelaySeconds: 5
    timeoutSeconds: 1
    periodSeconds: 2

  database:
    embedded:
      enabled: true
      #TODO remove below after migration to separate user will be done
    # Values for GCP managed PostgreSQL database
    managedGCP:
      instanceConnectionName: ""

  istio:
    gateway:
      name: "compass-istio-gateway"
      namespace: "compass-system"
    proxy:
      port: 15020

  defaultTenant: 3e64ebae-38b5-46a0-b1ed-9ccee153a0ae


  provisioner:
    graphql:
      port: 3000
    secrets:
      integrationSystemCredentials:
        name: compass-provisioner-credentials

    gcp:
      credentials: ""
      projectName: ""
    gardener:
      providers: "Azure"
      azureSecret: "" # Name of Gardener secret for Azure
      gcpSecret: "" # Name of Gardener secret for GCP
    kyma:
      version: "1.12.0"
    queryLogging: false

metrics:
  port: 9000


logs:
  level: "info"

gardener:
  project: "" # Gardener project connected to SA
  kubeconfigPath: "/gardener/kubeconfig/kubeconfig"
  kubeconfig: "" # Base64 encoded Gardener SA key
  auditLogTenantConfigPath: "" # "/gardener/tenant/config"
  auditLogTenantConfigMapName: ""
  maintenanceWindowConfigPath: "" # "/gardener/maintenance/config"
  maintenanceWindowConfigMapName: ""
  secretName: "gardener-credentials"
  auditLogsPolicyConfigMap: ""
  manageSecrets: true
  clusterCreationTimeout: 2h
  clusterDeletionTimeout: 30m
  waitingForClusterDeletionTimeout: 4h
  clusterCleanupTimeout: 20m
  clusterCleanupResourceSelector: "https://service-manager."

provisionerName: gardener

tests:
  enabled: false

deployment:
  replicaCount: 1
  image:
    pullPolicy: IfNotPresent
  resources: {}
  securityContext: # Set on container level
    runAsUser: 2000
    allowPrivilegeEscalation: false
  strategy: {} # Read more: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  nodeSelector: {}

security:
  skipTLSCertificateVeryfication: false

installation:
  timeout: 22h

runtimeAgent:
  configurationTimeout: 1h
  connectionTimeout: 1h

kymaRelease:
  preReleases:
    enabled: true
  onDemand:
    enabled: true
